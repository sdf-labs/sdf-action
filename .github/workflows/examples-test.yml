name: Test sdf-action

on:
  pull_request:

jobs:
  # tpch_redshift:
  #   runs-on: ubuntu-latest
  #   name: Run sdf compile on a Redshift workspace
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: sdf compile step
  #       uses: ./ # Uses an action in the root directory
  #       id: sdf
  #       with:
  #         command: 'sdf compile --show all'
  #         workspace_dir: 'workspace/tpch_redshift'

  #         aws_region: 'us-west-2'
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  #     # Use the output from the `sdf` step
  #     - name: Display the sdf output
  #       run: |
  #         echo "### SDF Run Logs ðŸªµ" >> $GITHUB_STEP_SUMMARY
  #         echo '```' >>$GITHUB_STEP_SUMMARY
  #         echo "${{ steps.sdf.outputs.log }}" >>$GITHUB_STEP_SUMMARY
  #         echo '```' >>$GITHUB_STEP_SUMMARY
  
  # dbt_init_challenge_v1 - sdf relies on dbt commands run in the same job
  # dbt_init_challenge_v1:
  #   runs-on: ubuntu-latest
  #   name: Run sdf push on a DBT + Snowflake workspace
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
        
  #     - name: Run DBT commands
  #       uses: mwhitaker/dbt-action@master
  #       env: 
  #         DBT_TARGET: dev
  #         SNOWFLAKE_ACCOUNT_ID: ${{ secrets.SNOWFLAKE_ACCOUNT_ID }}
  #         SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  #       with:
  #         dbt_command: "dbt compile"
  #         dbt_project_folder: "workspace/dbt_init_challenge"

  #     - name: sdf push step
  #       uses: ./ # Uses an action in the root directory
  #       id: sdf
  #       with:
  #         command: 'sdf compile'
  #         workspace_dir: 'workspace/dbt_init_challenge'
  #         access_key: ${{ secrets.ACCESS_KEY }}
  #         secret_key: ${{ secrets.SECRET_KEY }}

  #         is_dbt: 'true'
  #         snowflake_account_id: ${{ secrets.SNOWFLAKE_ACCOUNT_ID }}
  #         snowflake_username: ${{ secrets.SNOWFLAKE_USERNAME }}
  #         snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
  #         snowflake_role: 'dbt_test_role'
  #         snowflake_warehouse: 'dbt_dev_wh'

  #     # Use the output from the `sdf` step
  #     - name: Display the sdf output
  #       run: |
  #         echo "### SDF Run Logs ðŸªµ" >> $GITHUB_STEP_SUMMARY
  #         echo '```' >>$GITHUB_STEP_SUMMARY
  #         echo "${{ steps.sdf.outputs.log }}" >>$GITHUB_STEP_SUMMARY
  #         echo '```' >>$GITHUB_STEP_SUMMARY

  # dbt_init_challenge_v2: rus dbt commands in a container job
  dbt_init_challenge_v2:
    container:
      image: ghcr.io/dbt-labs/dbt-snowflake:1.5.latest
      options: --mount type=bind,source=${{ github.workspace }},target=/workspace
    runs-on: ubuntu-latest
    name: Run dbt commands in a job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run DBT commands
        env:
          DBT_TARGET: dev
          SNOWFLAKE_ACCOUNT_ID: ${{ secrets.SNOWFLAKE_ACCOUNT_ID }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          cd /workspace/dbt_init_challenge
          dbt deps
          dbt compile
      - name: List target files
        run: |
          ls -l /workspace/dbt_init_challenge
      - name: sdf push step
        uses: ./ # Uses an action in the root directory
        id: sdf
        with:
          command: 'sdf compile'
          workspace_dir: /workspace/dbt_init_challenge
          access_key: ${{ secrets.ACCESS_KEY }}
          secret_key: ${{ secrets.SECRET_KEY }}

          is_dbt: 'true'
          snowflake_account_id: ${{ secrets.SNOWFLAKE_ACCOUNT_ID }}
          snowflake_username: ${{ secrets.SNOWFLAKE_USERNAME }}
          snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
          snowflake_role: 'dbt_test_role'
          snowflake_warehouse: 'dbt_dev_wh'
  
      # Use the output from the `sdf` step
      - name: Display the sdf output
        run: |
          echo "### SDF Run Logs ðŸªµ" >> $GITHUB_STEP_SUMMARY
          echo '```' >>$GITHUB_STEP_SUMMARY
          echo "${{ steps.sdf.outputs.log }}" >>$GITHUB_STEP_SUMMARY
          echo '```' >>$GITHUB_STEP_SUMMARY

